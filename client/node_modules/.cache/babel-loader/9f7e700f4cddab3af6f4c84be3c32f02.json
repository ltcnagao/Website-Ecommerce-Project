{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from 'lodash.memoize';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]));\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collection.id == COLLECTION_ID_MAP[collectionUrlParam]));","map":{"version":3,"sources":["F:/crwn-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollections","collectionUrlParam","collections","selectCollection","find","collection","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE,CADgB;AAEtBC,EAAAA,QAAQ,EAAE,CAFY;AAGtBC,EAAAA,OAAO,EAAE,CAHa;AAItBC,EAAAA,MAAM,EAAE,CAJc;AAKtBC,EAAAA,IAAI,EAAE;AALgB,CAA1B;;AAQA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGV,OAAO,CAAEW,kBAAD,IACrCZ,cAAc,CACV,CAACW,iBAAD,CADU,EAETE,WAAD,IAAiBA,WAAW,CAACD,kBAAD,CAFlB,CADsB,CAAjC;AAOP,OAAO,MAAME,gBAAgB,GAAGF,kBAAkB,IAC9CZ,cAAc,CACV,CAACW,iBAAD,CADU,EAEVE,WAAW,IAAIA,WAAW,CAACE,IAAZ,CACXC,UAAU,IAAIA,UAAU,CAACC,EAAX,IAAiBf,iBAAiB,CAACU,kBAAD,CADrC,CAFL,CADX","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst COLLECTION_ID_MAP = {\r\n    hats: 1,\r\n    sneakers: 2,\r\n    jackets: 3,\r\n    womens: 4,\r\n    mens: 5\r\n}\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = memoize((collectionUrlParam) =>\r\n    createSelector(\r\n        [selectCollections],\r\n        (collections) => collections[collectionUrlParam]\r\n    )\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n    createSelector(\r\n        [selectCollections],\r\n        collections => collections.find(\r\n            collection => collection.id == COLLECTION_ID_MAP[collectionUrlParam])\r\n    )"]},"metadata":{},"sourceType":"module"}